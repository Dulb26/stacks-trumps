# GitHub Actions workflow
# https://help.github.com/actions

name: CI/CD

on:
  push:
    branches: [main]
    tags:
      - "v*"
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment"
        type: environment
        default: "stacks-top-trumps"
        required: true

env:
  NODE_VERSION: 20.5.x
  VERSION: ${{ github.event.pull_request.number }}
  HUSKY: 0

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Configure Node.js and install NPM dependencies
      - uses: actions/setup-node@v4
        with: { node-version: "${{ env.NODE_VERSION }}", cache: "yarn" }
      - run: yarn install

      # Analyze code for potential problems
      - run: yarn prettier --check .
        if: ${{ github.event_name == 'pull_request' }}
      - run: yarn lint
        if: ${{ github.event_name == 'pull_request' }}
      - run: yarn tsc --build
      - run: yarn workspace app test
        if: ${{ github.event_name == 'pull_request' }}

      # Compile and save build artifacts
      - run: yarn build
      - uses: actions/upload-artifact@v4
        with: { name: "build", path: "app/dist" }

  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: ${{ inputs.environment || 'stacks-top-trumps' }}
      url: ${{ inputs.environment == 'prod' && 'https://example.com' || format('https://{0}.example.com', inputs.environment || 'test') }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: "${{ env.NODE_VERSION }}", cache: "yarn" }
      - run: yarn install
      - uses: actions/download-artifact@v4
        with: { name: "build" }
      - run: npm install -g firebase-tools
      - name: Create SA key
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_PROD }}' > $HOME/gcloud.json
          else
            echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_DEV }}' > $HOME/gcloud.json
          fi
      - name: Deploy to Firebase
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            firebase deploy --only hosting:prod --project=stacks-top-trumps --json
          else
            firebase deploy --only hosting:dev --project=stacks-top-trumps-dev --json
          fi
        env:
          GOOGLE_APPLICATION_CREDENTIALS: $HOME/gcloud.json
